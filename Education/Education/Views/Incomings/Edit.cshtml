@model Education.Data.Incoming

@{
	ViewBag.Title = "Edit";
	Layout = "~/Views/Shared/_LayoutSchool.cshtml";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
	@Html.AntiForgeryToken()
	<div class="card-header">
		<strong class="card-title">Form controls</strong>
	</div>
		<div class="card-body">
			<div class="row">
				<div class="col-md-6">
					<div class="form-horizontal">
						<h4>Incoming</h4>
						<hr />
						@Html.ValidationSummary(true, "", new { @class = "text-danger" })
						@Html.HiddenFor(model => model.Id)

						<div class="form-group">
							@Html.LabelFor(model => model.Number, htmlAttributes: new { @class = "control-label col-md-2" })
							<div class="col-md-10">
								@Html.EditorFor(model => model.Number, new { htmlAttributes = new { @class = "form-control" } })
								@Html.ValidationMessageFor(model => model.Number, "", new { @class = "text-danger" })
							</div>
						</div>

						<div class="form-group">
							@Html.LabelFor(model => model.SchoolId, htmlAttributes: new { @class = "control-label col-md-2" })
							<div class="col-md-10">
								@Html.EditorFor(model => model.SchoolId, new { htmlAttributes = new { @class = "form-control" } })
								@Html.ValidationMessageFor(model => model.SchoolId, "", new { @class = "text-danger" })
							</div>
						</div>

						<div class="form-group">
							@Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
							<div class="col-md-10">
								@Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
								@Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
							</div>
						</div>

						<div class="form-group">
							@Html.LabelFor(model => model.Source, htmlAttributes: new { @class = "control-label col-md-2" })
							<div class="col-md-10">
								@Html.EditorFor(model => model.Source, new { htmlAttributes = new { @class = "form-control" } })
								@Html.ValidationMessageFor(model => model.Source, "", new { @class = "text-danger" })
							</div>
						</div>

						<div class="form-group">
							@Html.LabelFor(model => model.Subject, htmlAttributes: new { @class = "control-label col-md-2" })
							<div class="col-md-10">
								@Html.EditorFor(model => model.Subject, new { htmlAttributes = new { @class = "form-control" } })
								@Html.ValidationMessageFor(model => model.Subject, "", new { @class = "text-danger" })
							</div>
						</div>

						<div class="form-group">
							@Html.LabelFor(model => model.FileNumber, htmlAttributes: new { @class = "control-label col-md-2" })
							<div class="col-md-10">
								@Html.EditorFor(model => model.FileNumber, new { htmlAttributes = new { @class = "form-control" } })
								@Html.ValidationMessageFor(model => model.FileNumber, "", new { @class = "text-danger" })
							</div>
						</div>

						<div class="form-group">
							@Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
							<div class="col-md-10">
								@Html.EditorFor(model => model.Type, new { htmlAttributes = new { @class = "form-control" } })
								@Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
							</div>
						</div>

						<div class="form-group">
							@Html.LabelFor(model => model.Attachment, htmlAttributes: new { @class = "control-label col-md-2" })
							<div class="col-md-10">
								@Html.EditorFor(model => model.Attachment, new { htmlAttributes = new { @class = "form-control" } })
								@Html.ValidationMessageFor(model => model.Attachment, "", new { @class = "text-danger" })
							</div>
						</div>

						<div class="form-group">
							@Html.LabelFor(model => model.IsDeleted, htmlAttributes: new { @class = "control-label col-md-2" })
							<div class="col-md-10">
								<div class="checkbox">
									@Html.EditorFor(model => model.IsDeleted)
									@Html.ValidationMessageFor(model => model.IsDeleted, "", new { @class = "text-danger" })
								</div>
							</div>
						</div>

						<div class="form-group">
							@Html.LabelFor(model => model.FileLocation, htmlAttributes: new { @class = "control-label col-md-2" })
							<div class="col-md-10">
								@Html.EditorFor(model => model.FileLocation, new { htmlAttributes = new { @class = "form-control" } })
								@Html.ValidationMessageFor(model => model.FileLocation, "", new { @class = "text-danger" })
							</div>
						</div>

						<div class="form-group">
							@Html.LabelFor(model => model.Comment, htmlAttributes: new { @class = "control-label col-md-2" })
							<div class="col-md-10">
								@Html.EditorFor(model => model.Comment, new { htmlAttributes = new { @class = "form-control" } })
								@Html.ValidationMessageFor(model => model.Comment, "", new { @class = "text-danger" })
							</div>
						</div>

						<div class="form-group">
							<div class="col-md-offset-2 col-md-10">
								<input type="submit" value="Save" class="btn btn-default" />
							</div>
						</div>
					</div>
				</div>
				<div class="col-md-6">
					<div > <img id = "user_img" height = "100" 	width = "90"style = "border:solid" /> </div>
					<div>
						<input type="file" title="search image" id="file" name="file" onchange="show(this)" /> </div>
						<div>
							UserId
						</div> <div> <input type = "text" id = "txt_id"	name = "id" /> </div>
						<div>
							UserName
						</div> <div> <input type = "text" id = "txt_name"
						name = "Name" /> </div>
						<div>
							<input type="submit" title="save" /> </div>
						</div>
					</div>
				</div>
					
}

<div>
	@Html.ActionLink("Back to List", "Index")
</div>
<script src="~/Scripts/jquery-1.7.1.min.js"></script>
<script type="text/javascript">

   function show(input) {
      if (input.files && input.files[0]) {
      var filerdr = new FileReader();
      filerdr.onload = function (e) {
         $('#user_img').attr('src', e.target.result);
      }
      filerdr.readAsDataURL(input.files[0]);
   }
}
</script>
